<?php
/*
Plugin Name:	Oxygen Theme Enabler
Plugin URI:		https://wpdevdesign.com/oxygen-theme-enabler-plugin/
Description:	Enables the active theme when using Oxygen.
Version:		1.0.2
Author:			Sridhar Katakam
Author URI:		https://wpdevdesign.com
License:		GPL-2.0+
License URI:	http://www.gnu.org/licenses/gpl-2.0.txt

This plugin is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
any later version.

This plugin is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with This plugin. If not, see {URI to Plugin License}.
*/

if ( ! defined( 'WPINC' ) ) {
	die;
}

// Return early if the webpage is being edited by Oxygen editor.
if ( isset ( $_GET['ct_builder'] ) && 'true' === $_GET['ct_builder'] ) {
	return;
}

// Callback for setting the if condition where theme or Oxygen should be used.
function ote_on_these_views() {

	// $oxygen_theme_enabler_options = get_option( 'oxygen_theme_enabler_option_name' ); // Array of All Options
	// $myifcondition = $oxygen_theme_enabler_options['enter_your_if_condition_1'];

	return is_page( array( 'contact', 'donate', 'home' ) ); // enter your if condition here. Reference: https://codex.wordpress.org/Conditional_Tags
}

/**
 * Generated by the WordPress Option Page generator
 * at https://jeremyhixon.com/tool/wordpress-option-page-generator/
 */

class OxygenThemeEnabler {
	private $oxygen_theme_enabler_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'oxygen_theme_enabler_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'oxygen_theme_enabler_page_init' ) );
	}

	public function oxygen_theme_enabler_add_plugin_page() {
		add_submenu_page(
			'ct_dashboard_page',
			'Oxygen Theme Enabler', // page_title
			'Theme Enabler', // menu_title
			'manage_options', // capability
			'oxygen-theme-enabler', // menu_slug
			array( $this, 'oxygen_theme_enabler_create_admin_page' ) // function
		);
	}

	public function oxygen_theme_enabler_create_admin_page() {
		$this->oxygen_theme_enabler_options = get_option( 'oxygen_theme_enabler_option_name' ); ?>

		<div class="wrap">
			<h2>Oxygen Theme Enabler</h2>
			<p></p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'oxygen_theme_enabler_option_group' );
					do_settings_sections( 'oxygen-theme-enabler-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function oxygen_theme_enabler_page_init() {
		register_setting(
			'oxygen_theme_enabler_option_group', // option_group
			'oxygen_theme_enabler_option_name', // option_name
			array( $this, 'oxygen_theme_enabler_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'oxygen_theme_enabler_setting_section', // id
			'Settings', // title
			array( $this, 'oxygen_theme_enabler_section_info' ), // callback
			'oxygen-theme-enabler-admin' // page
		);

		add_settings_field(
			'select_how_you_want_to_enable_the_theme_0', // id
			'Select how you want to enable the theme', // title
			array( $this, 'select_how_you_want_to_enable_the_theme_0_callback' ), // callback
			'oxygen-theme-enabler-admin', // page
			'oxygen_theme_enabler_setting_section' // section
		);

		// add_settings_field(
		// 	'enter_your_if_condition_1', // id
		// 	'Enter your if condition', // title
		// 	array( $this, 'enter_your_if_condition_1_callback' ), // callback
		// 	'oxygen-theme-enabler-admin', // page
		// 	'oxygen_theme_enabler_setting_section' // section
		// );
	}

	public function oxygen_theme_enabler_sanitize( $input ) {
		$sanitary_values = array();
		if ( isset( $input['select_how_you_want_to_enable_the_theme_0'] ) ) {
			$sanitary_values['select_how_you_want_to_enable_the_theme_0'] = $input['select_how_you_want_to_enable_the_theme_0'];
		}

		// if ( isset( $input['enter_your_if_condition_1'] ) ) {
		// 	$sanitary_values['enter_your_if_condition_1'] = esc_textarea( $input['enter_your_if_condition_1'] );
		// }

		return $sanitary_values;
	}

	public function oxygen_theme_enabler_section_info() {

	}

	public function select_how_you_want_to_enable_the_theme_0_callback() {
		?> <fieldset><?php $checked = ( isset( $this->oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] ) && $this->oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] === 'use-theme-mostly' ) ? 'checked' : '' ; ?>
		<label for="select_how_you_want_to_enable_the_theme_0-0"><input type="radio" name="oxygen_theme_enabler_option_name[select_how_you_want_to_enable_the_theme_0]" id="select_how_you_want_to_enable_the_theme_0-0" value="use-theme-mostly" <?php echo $checked; ?>> Use theme for most pages but use <strong>Oxygen on the select views</strong> defined by the condition(s) in plugin file</label><br>
		<?php $checked = ( isset( $this->oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] ) && $this->oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] === 'use-oxygen-mostly' ) ? 'checked' : '' ; ?>
		<label for="select_how_you_want_to_enable_the_theme_0-1"><input type="radio" name="oxygen_theme_enabler_option_name[select_how_you_want_to_enable_the_theme_0]" id="select_how_you_want_to_enable_the_theme_0-1" value="use-oxygen-mostly" <?php echo $checked; ?>> Use Oxygen for most pages but use <strong>theme on the select views</strong> defined by the condition(s) in plugin file</label></fieldset> <?php
	}

	// public function enter_your_if_condition_1_callback() {
	// 	printf(
	// 		'<textarea class="large-text" rows="5" name="oxygen_theme_enabler_option_name[enter_your_if_condition_1]" id="enter_your_if_condition_1">%s</textarea>',
	// 		isset( $this->oxygen_theme_enabler_options['enter_your_if_condition_1'] ) ? esc_attr( $this->oxygen_theme_enabler_options['enter_your_if_condition_1']) : ''
	// 	);
	// echo "Examples:<br/><br/>is_page( 'about' )<br/>is_page( array( 42, 'about-me', 'About Me And Joe' ) )<br/>is_front_page()<br/>is_woocommerce()<br/><br/>Reference: <a href='https://codex.wordpress.org/Conditional_Tags' target='_blank'>https://codex.wordpress.org/Conditional_Tags</a>";
	// }

}
if ( is_admin() ) {
	$oxygen_theme_enabler = new OxygenThemeEnabler();
}

/*
 * Retrieve this value with:
 * $oxygen_theme_enabler_options = get_option( 'oxygen_theme_enabler_option_name' ); // Array of All Options
 * $select_how_you_want_to_enable_the_theme_0 = $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0']; // Select how you want to enable the theme
 * $enter_your_if_condition_1 = $oxygen_theme_enabler_options['enter_your_if_condition_1']; // Enter your if condition
 */

// Reverse empty stylesheet URL being returned by Oxygen.
remove_filter( 'template_directory', 'ct_disable_theme_load', 1, 1 );
remove_filter( 'stylesheet_directory', 'ct_disable_theme_load', 1, 1 );

// Override the theme name change from "oxygen-is-not-a-theme" by Oxygen.
remove_filter( 'template', 'ct_oxygen_template_name' );

remove_filter( 'template_include', 'ct_css_output', 99 );
add_filter( 'template_include', 'ote_ct_css_output', 99 );
/**
 * Returns the template dictated by active theme.
 *
 * For every other page, uses a dedicated template to render CSS only that can be loaded from external links
 * or Oxygen main template to show builder or builder designed page
 *
 * @author gagan goraya
 * @author sridhar katakam
 */
function ote_ct_css_output( $template ) {
	$oxygen_theme_enabler_options = get_option( 'oxygen_theme_enabler_option_name' ); // Array of All Options

	if ( ( 'use-theme-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ! ote_on_these_views() ) || ( 'use-oxygen-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ote_on_these_views() ) ) {
		return $template;
	}

	$new_template = '';

	if ( get_page_template() !== $template && get_index_template() !== $template ) {
		global $ct_replace_render_template;
		$ct_replace_render_template = $template;
	}

	if ( isset( $_REQUEST['xlink'] ) && stripslashes( $_REQUEST['xlink'] ) === 'css' ) {
		if ( file_exists( plugin_dir_path( __DIR__ ) . 'oxygen/component-framework/csslink.php' ) ) {
			$new_template = plugin_dir_path( __DIR__ ) . 'oxygen/component-framework/csslink.php';
		}
	}
	else {
		// if there is saved template or if we are in builder mode

		//if ( ct_template_output( true ) || defined( "SHOW_CT_BUILDER" ) ) {

			if ( defined( 'OXYGEN_IFRAME' ) ) {
				$new_template =  plugin_dir_path( __DIR__ ) . 'oxygen/component-framework/oxygen-iframe-template.php';
			} elseif ( file_exists( plugin_dir_path( __DIR__ ) . 'oxygen/component-framework/oxygen-main-template.php' ) ) {
				$new_template = plugin_dir_path( __DIR__ ) . 'oxygen/component-framework/oxygen-main-template.php';
			}

		//}
	}

	return $new_template;
}

add_action( 'wp_print_styles', 'ote_dequeue_oxygen_assets', 100 );
/**
 * Dequeue Oxygen's files conditionally.
 *
 * Hooked to the wp_print_styles action, with a late priority (100),
 * so that it is after the file was enqueued.
 */
function ote_dequeue_oxygen_assets() {
	$oxygen_theme_enabler_options = get_option( 'oxygen_theme_enabler_option_name' ); // Array of All Options
	if ( ( 'use-theme-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ! ote_on_these_views() ) || ( 'use-oxygen-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ote_on_these_views() ) ) {
		wp_dequeue_style( 'oxygen' );
	}
}

add_action( 'wp_enqueue_scripts', 'ote_disable_oxy_print_cached_css', PHP_INT_MAX );
/**
 * DO NOT output all Oxygen generated styles: number of cached CSS files or dynamic xlink
 */
function ote_disable_oxy_print_cached_css() {
	$oxygen_theme_enabler_options = get_option( 'oxygen_theme_enabler_option_name' ); // Array of All Options

	if (
		( 'use-theme-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ! ote_on_these_views() && ! ( isset ( $_GET['ct_builder'] ) && 'true' === $_GET['ct_builder'] ) )
		||
		( 'use-oxygen-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ote_on_these_views() )
	) {
		remove_action( 'wp_head', 'oxy_print_cached_css', 999999 );
	}
}

// This has been commented out since it involves hardcoding the function inside the current active theme.
// The block of code below will effectively do the same.
// See https://wordpress.stackexchange.com/questions/352533/how-to-remove-all-enqueued-assets-from-the-active-theme.
// add_action( 'template_redirect', 'ote_dequeue_theme_assets' );
/**
 * Unload theme assets on views where Oxygen is enabled.
 */
function ote_dequeue_theme_assets() {
	$oxygen_theme_enabler_options = get_option( 'oxygen_theme_enabler_option_name' ); // Array of All Options

	if ( ( 'use-theme-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ote_on_these_views() ) || ( 'use-oxygen-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ! ote_on_these_views() ) ) {
		remove_action( 'wp_enqueue_scripts', 'twentynineteen_scripts' );

		remove_action( 'wp_enqueue_scripts', 'twentytwenty_register_styles' );
		remove_action( 'wp_enqueue_scripts', 'twentytwenty_register_scripts' );
	}
}

add_action( 'wp_enqueue_scripts', 'ote_dequeue_theme_assets2', 20 );
/**
 * Unload theme assets on views where Oxygen is enabled.
 */
function ote_dequeue_theme_assets2() {
	$oxygen_theme_enabler_options = get_option( 'oxygen_theme_enabler_option_name' ); // Array of All Options

	if ( ( 'use-theme-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ote_on_these_views() ) || ( 'use-oxygen-mostly' === $oxygen_theme_enabler_options['select_how_you_want_to_enable_the_theme_0'] && ! ote_on_these_views() ) ) {
		global $wp_styles;
		global $wp_scripts;

		$wp_get_theme = wp_get_theme();
		
		$child_theme  = $wp_get_theme->get_stylesheet();
		$parent_theme = $wp_get_theme->get_template();

		foreach ( $wp_styles->registered as $key => $value ) {
			$src = $value->src;
			if ( strpos( $src, "themes/$child_theme/") !== false || strpos( $src, "themes/$parent_theme/" ) !== false ) {
				unset( $wp_styles->registered[$key] );
			}

			if ( strpos( $src, "/uploads/$child_theme/" ) !== false || strpos( $src, "/uploads/$parent_theme/" ) !== false ) {
				unset( $wp_styles->registered[$key] );
			}
		}
		
		foreach ( $wp_scripts->registered as $key => $value ) {
			$src = $value->src;
			if ( strpos( $src, "themes/$child_theme/") !== false || strpos( $src, "themes/$parent_theme/" ) !== false ) {
				unset( $wp_scripts->registered[$key] );
			}

			if ( strpos( $src, "/uploads/$child_theme/" ) !== false || strpos( $src, "/uploads/$parent_theme/" ) !== false ) {
				unset( $wp_scripts->registered[$key] );
			}
		}
	}
}
